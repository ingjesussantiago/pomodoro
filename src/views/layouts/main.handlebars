<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">


</head>

<body>
  <div class="collapse" id="navbarToggleExternalContent" data-bs-theme="dark">
    <div class="bg-dark p-4">
      <h5 class="text-body-emphasis h4">no hay name</h5>
      <span class="text-body-secondary">Productos con socket </span>
    </div>
  </div>
  <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid ">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
        data-bs-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="false"
        aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <ul class="nav">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Active</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Link</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Link</a>
        </li>

      </ul>
    </div>
  </nav>
  {{!-- <div class="clock">
    <div class="time" id="time">00:00:00</div>
  </div> --}}
  {{!-- <button id="startButton">Iniciar Reloj</button>
  <button id="stopButton">Detener Reloj</button> --}}

  <div class="container-fluid text-center mb-3 p-4">
    <h1>Activity</h1>
  </div>
  <div>
 <h1>Reloj Pomodoro</h1>
    <div id="message"></div>
    <div id="timer">25:00</div>
    <button id="start-button">Iniciar</button>
    <button id="pause-button">Pausar</button>


      <div class="row justify-content-evenly gap-4 p-4" id="lista">
        {{{body}}}
      </div>
      <div class="container-fluid  d-flex gap-4">
        <div class="col-6">
          <h1 class="gap-3 p-4">Captura de actividades</h1>

          <form id="formularioIo" action="/pomodoro" method="POST">

            <label for="name" "form-label">Title:</label>
            <input type="text" id="title" name="title" class="form-control" required>
            <label for="name" "form-label">Descripción:</label>
            <input type="tex" id="descripcion" name="descripcion" class="form-control" required>
            <label for="price">Status</label>
            <input type="boolean" id="status" name="status" class="form-control mb-4 " required>
            <button type="submit">Enviar</button>


          </form>
        </div>

        <div class="col-3">
          <h2 class="gap-3 p-4">Eliminar Una Actividad</h2>

          <form action="/pomodoro/eliminarId" method="POST">

            <label for="price" class="form-label">id</label>
            <input type="number" id="idProducto" class="form-control" name="id" required>
            <button type="submit">Enviar</button>
            <br>
          </form>

        </div>



      </div>


        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
        crossorigin="anonymous"></script>
 
      <script>
 document.addEventListener('DOMContentLoaded', function () {
  const timerDisplay = document.getElementById('timer');
  const messageDisplay = document.getElementById('message');
  const startButton = document.getElementById('start-button');
  const pauseButton = document.getElementById('pause-button');

  let minutes = 25;
  let seconds = 0;
  let interval;

  function updateTimer() {
    timerDisplay.innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;
  }

  function showMessage(message) {
    messageDisplay.innerText = message;
  }

  function startPomodoro() {
    showMessage('');
    if (minutes === 0 && seconds === 0) {
      minutes = `${minutes}`;
      seconds = 0;
    }
    interval = setInterval(() => {
      if (minutes === 0 && seconds === 0) {
        showMessage('¡Pomodoro terminado! Tómate un descanso.');
        clearInterval(interval);
        return;
      }
      if (seconds === 0) {
        minutes--;
        seconds = 59;
      } else {
        seconds--;
      }
      updateTimer();
    }, 1000);
  }

  function pausePomodoro() {
    clearInterval(interval);
    showMessage('Pomodoro pausado');
  }

  startButton.addEventListener('click', startPomodoro);
  pauseButton.addEventListener('click', pausePomodoro);

  updateTimer();
  startPomodoro(); // Iniciar el Pomodoro automáticamente al cargar la página
});


  </script>


</body>

</html>